@page "/"
@implements IAsyncDisposable
@inject IJSRuntime JS

@foreach (var word in words)
{
    <p>
        @word.Pinyin - @word.Definition
        <button class="btn btn-primary" @onclick="() => Quiz(word)">Quiz</button>
    </p>
}

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" id="grid-background-target" style="width: 90%; height: 90%; max-width: 80vh; max-height: 80vh;">
    <line x1="0" y1="0" x2="100" y2="100" stroke="#DDD" />
    <line x1="100" y1="0" x2="0" y2="100" stroke="#DDD" />
    <line x1="50" y1="0" x2="50" y2="100" stroke="#DDD" />
    <line x1="0" y1="50" x2="100" y2="50" stroke="#DDD" />
    <line x1="0.5" y1="0.5" x2="0.5" y2="99.5" stroke="#DDD" />
    <line x1="0.5" y1="0.5" x2="99.5" y2="0.5" stroke="#DDD" />
    <line x1="0.5" y1="99.5" x2="99.5" y2="99.5" stroke="#DDD" />
    <line x1="99.5" y1="0.5" x2="99.5" y2="99.5" stroke="#DDD" />
</svg>

@code {
    private IJSObjectReference? module;
    private Word[] words = new Word[] {
        new Word("的", "的", "de5", "de", "indicates possession, like adding 's to a noun"),
        new Word("我", "我", "wo3", "wǒ", "I; me"),
        new Word("你", "你", "ni3", "nǐ", "you (singular)"),
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/index.js");
        }
    }

    private async void Quiz(Word word)
    {
        if (module is not null)
        {
            await module!.InvokeVoidAsync("quizCharacter", word.Simplified);
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}
