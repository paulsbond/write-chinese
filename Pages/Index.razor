@page "/"
@implements IAsyncDisposable
@inject IJSRuntime JS

<p>
    Enter a character, e.g. 我, 国, 草
</p>
<div>
    <input @bind="character" type="text" placeholder="Name" />
    <button class="btn btn-primary" @onclick="Quiz">Quiz</button>
</div>

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" id="grid-background-target" style="width: 90%; height: 90%; max-width: 80vh; max-height: 80vh;">
  <line x1="0" y1="0" x2="100" y2="100" stroke="#DDD" />
  <line x1="100" y1="0" x2="0" y2="100" stroke="#DDD" />
  <line x1="50" y1="0" x2="50" y2="100" stroke="#DDD" />
  <line x1="0" y1="50" x2="100" y2="50" stroke="#DDD" />
  <line x1="0.5" y1="0.5" x2="0.5" y2="99.5" stroke="#DDD" />
  <line x1="0.5" y1="0.5" x2="99.5" y2="0.5" stroke="#DDD" />
  <line x1="0.5" y1="99.5" x2="99.5" y2="99.5" stroke="#DDD" />
  <line x1="99.5" y1="0.5" x2="99.5" y2="99.5" stroke="#DDD" />
</svg>

@code {
    private IJSObjectReference? module;
    private string character = "我";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./Pages/Index.razor.js");
        }
    }

    private async void Quiz()
    {
        if (module is not null)
        {
            await module!.InvokeVoidAsync("quizCharacter", character);
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}
